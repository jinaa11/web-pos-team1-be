# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: Build with Gradle
      # uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
      # with:
      #  arguments: build
      run : ./gradlew clean build --exclude-task test
        
      # jwt 정보 로딩
    - name: Copy Secret DB
      env:
          SECRET_DB: ${{ secrets.SECRET_DB }}
          SECRET_DB_DIR: src/main/resources
          SECRET_DB_DIR_FILE_NAME: application-db.yml
      run: echo $SECRET_DB | base64 --decode > $SECRET_DB_DIR/$SECRET_DB_DIR_FILE_NAME

  
    - name: Copy Secret Iamport
      env:
          SECRET_IAMPORT: ${{ secrets.SECRET_IAMPORT }}
          SECRET_IAMPORT_DIR: src/main/resources
          SECRET_IAMPORT_DIR_FILE_NAME: application-import.yml
      run: echo $SECRET_IAMPORT | base64 --decode > $SECRET_IAMPORT_DIR/$SECRET_IAMPORT_DIR_FILE_NAME
      
    - name: Copy Secret Sms
      env:
          SECRET_SMS: ${{ secrets.SECRET_SMS }}
          SECRET_SMS_DIR: src/main/resources
          SECRET_SMS_DIR_FILE_NAME: application-sms.yml
      run: echo $SECRET_SMS | base64 --decode > $SECRET_SMS_DIR/$SECRET_SMS_DIR_FILE_NAME
    - name: Install dependencies
      run: npm install

    - name: Build
      run: npm run build

    - name: SHOW AWS CLI VERSION
      env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_EC2_METADATA_DISABLED: true
      run: |
          aws --version
    - name: Sync Bucket
      env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_EC2_METADATA_DISABLED: true
      run: |
          aws s3 sync \
            --region ap-northeast-2 \
            build s3://webpos-bucket \
            --delete
      working-directory: ./my-agora-states-client
